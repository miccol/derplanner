
domain grasp
{
    fact
    {
        grasped(id32) :size(1)
        high_confidence(id32) :size(1)
	in_front(id32) :size(1)
	true(id32)
    }

    prim
    {
        pick!(id32)
	look!(id32)
        place_in_front!(id32)
    }

    macro
    {
        take(x) = grasped(x)
	observe(x) = high_confidence(x)
	place(x) = in_front(x)

    }

    task root()
    {
        case take(x) -> [ fetch(x) ]
    }


    task fetch(x)
    {

        case high_confidence(x) -> [ pick!(x) ]

        case true(x) -> [ observe(x), fetch(x) ]
    }

    task observe(x)
    {
        case in_front(x) -> [ look!(x)]

        case true(x) -> [ pick!(x), place(x), observe(x) ]
    }

	task place(x)
	{
		case true(x) -> [place_in_front!(x) ]
	}

}
